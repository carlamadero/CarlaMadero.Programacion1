// DECLARACION DE UNA MATRIZ

int[] numeros; // Declaración de una matriz de enteros

// INICIALIZACION DE UNA MATRIZ

numeros = new int[5]; // Crea una matriz con 5 elementos

// DECLARACION E INICIALIZACION EN UNA SOLA LINEA

int[] numeros = {1, 2, 3, 4, 5}; // Inicializa una matriz con valores específicos

// ACCESO A ELEMENTOS

System.out.println(numeros[0]); // Imprime el primer elemento (1)
numeros[2] = 10; // Modifica el tercer elemento


//UTILIZACION
// 1. ALMACENAR DATOS RELACIONADOS

int[] calificaciones = {85, 90, 78, 92, 88};

// 2. RECORRER DATOS CON BUCLES

for (int i = 0; i < calificaciones.length; i++) {
    System.out.println(calificaciones[i]);
}

// 3. TABLAS O DATOS MULTIDIMENSIONALES

int[][] matriz = {
    {1, 2, 3},
    {4, 5, 6},
    {7, 8, 9}
};
System.out.println(matriz[1][2]); // Imprime el valor 6

// 4. REALIZAR OPERACIONES MATEMATICAS O ALGORITMOS
// 5. CLASIFICAICON Y BUSQUEDA1



// MATRIZ NULL

int[] numeros; // La matriz 'numeros' no está inicializada, su valor es null
System.out.println(numeros); // Esto imprimirá 'null'

//ASIGNACION NULA A PARTIR DE METODOS

public static void main(String[] args) {
    int[] matriz = obtenerMatriz(); // Método devuelve null
    System.out.println(matriz[0]); // Esto generará un NullPointerException
}

public static int[] obtenerMatriz() {
    return null; // Retorna una matriz nula
}

//INICIALIZAR LA MATRIZ ANTES DE USARLA

int[] numeros = new int[5]; // Inicializa la matriz con 5 elementos (valores predeterminados: 0)

for (int i = 0; i < numeros.length; i++) {
    System.out.println("Elemento en el índice " + i + ": " + numeros[i]);
}

